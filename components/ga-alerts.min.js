angular.module("ngAmbassador.alerts",["duScroll"]).factory("$alertMap",function(){return{createNew:function(){var stack={app:null,page:null,form:null};return{getSystem:function(type,name){if(null===stack[type])return stack[type]={},!1;for(var key in stack[type])if(key===name)return stack[type][key];return!1},createSystem:function(type,name,update){return void 0===update&&(update=null),stack[type][name]={update:update,alerts:[]},stack[type][name]},registerUpdate:function(type,name,update){return stack[type][name].update=update,stack[type][name]},removeSystem:function(type,name){delete stack[type][name]},addAlert:function(type,name,alert){stack[type][name].alerts.push(alert)},removeAlert:function(type,name,index){var system=this.getSystem(type,name);return system.alerts.splice(index,1)},getIndex:function(alert){return stack[alert.type][alert.name].alerts.indexOf(alert)}}}}}).factory("$alertStack",["$document","$compile","$timeout","$alertMap",function($document,$compile,$timeout,$alertMap){function startTimer(options){$timeout(function(){$alertStack.close(options)},options.timerVal)}function addSystemToDom(options){var body=$document.find("body").eq(0),angularDomEl=angular.element("<alert-system></alert-system>");angularDomEl.attr("type",options.type),angularDomEl.attr("name",options.name),angularDomEl.addClass("page");var alertSystemEl=$compile(angularDomEl)(options.scope);body.append(alertSystemEl)}function addAlert(system,options){activeAlerts.addAlert(options.type,options.name,options),options.timer&&startTimer(options),null!==system.update&&system.update(system.alerts)}var activeAlerts=$alertMap.createNew(),$alertStack={};return $alertStack.getAlerts=function(type,name){var system=activeAlerts.getSystem(type,name);return system.alerts},$alertStack.registerSystem=function(type,name,update){var system=activeAlerts.getSystem(type,name);return system&&null!==system.update?update(system.alerts):system&&null===system.update?(system=activeAlerts.registerUpdate(type,name,update),update(system.alerts)):(system=activeAlerts.createSystem(type,name,update),void 0!==update&&update(system.alerts)),system},$alertStack.deleteSystem=function(type,name){activeAlerts.removeSystem(type,name)},$alertStack.add=function(options,checked){var waitToLoad,system=activeAlerts.getSystem(options.type,options.name);!system&&options.register?(system=$alertStack.registerSystem(options.type,options.name),addAlert(system,options)):system||options.register||void 0!==checked?system||options.register||!checked?addAlert(system,options):(addSystemToDom(options),waitToLoad=setInterval(function(){system=activeAlerts.getSystem(options.type,options.name),system&&(clearInterval(waitToLoad),addAlert(system,options))},500)):$timeout(function(){$alertStack.add(options,!0)},500),options.scroll&&$document.scrollTo(0,0,500)},$alertStack.close=function(alert,index){void 0===index&&(index=activeAlerts.getIndex(alert)),activeAlerts.removeAlert(alert.type,alert.name,index),null!==alert.callback&&alert.callback()},$alertStack}]).provider("$alert",function(){var $alertProvider={options:{style:"info",type:"page",name:void 0,register:!1,text:"",timer:!0,timerVal:4e3,callback:null,scroll:!0},$get:["$rootScope","$alertStack",function($rootScope,$alertStack){var $alert={};return $alert.add=function(alertOptions){alertOptions=angular.extend({},$alertProvider.options,alertOptions);var alertScope=(alertOptions.scope||$rootScope).$new();$alertStack.add({scope:alertScope,style:alertOptions.style,type:alertOptions.type,name:alertOptions.name,register:alertOptions.register,text:alertOptions.text,timer:alertOptions.timer,timerVal:alertOptions.timerVal,callback:alertOptions.callback,scroll:alertOptions.scroll})},$alert.clearAll=function(type,alertSystem){var alerts=$alertStack.getAlerts(type,alertSystem),alertsToClose=[];angular.forEach(alerts,function(alert){alertsToClose.push(alert)}),angular.forEach(alertsToClose,function(alert){$alertStack.close(alert)})},$alert}]};return $alertProvider}).directive("alertSystem",["$alertStack","$timeout",function($alertStack,$timeout){return{restrict:"EA",template:'<div class="alert-system-inner"><alert ng-repeat="alert in alerts" type="{{alert.style}}" close="closeAlert(alert, $index)">{{alert.text}}</alert></div>',scope:{type:"@",name:"@"},link:function(scope,elm){var type=angular.isDefined(scope.type)?scope.type:"page",name=angular.isDefined(scope.name)?scope.name:null,update=function(alerts){$timeout(function(){scope.alerts=alerts})};$alertStack.registerSystem(type,name,update),elm.addClass("alert-system"),"page"===type?elm.addClass("page"):"app"===type&&elm.addClass("app"),scope.closeAlert=function(alert,index){$alertStack.close(alert,index)},scope.$on("$destroy",function(){var alerts=$alertStack.getAlerts(type,name);0===alerts.length&&$alertStack.deleteSystem(type,name)})}}}]).factory("$errors",["$alert",function($alert){return{output:function(options,error){var errorAlerts=[],fieldError=!1;if(error&&"object"==typeof error){for(var key in error)"detail"===key?errorAlerts.push(error[key]):"non_field_errors"===key?errorAlerts.push(error[key][0]):fieldError=!0;fieldError===!0&&errorAlerts.push("Please ensure all required fields are properly completed.")}else errorAlerts.push(angular.isDefined(options.defaultMessage)?options.defaultMessage:"Something went wrong. Please try again or contact support.");for(var i=0;i<errorAlerts.length;i++)if(2>i){var alertConfig={type:options.alertSystemType?options.alertSystemType:"page",name:options.alertSystem,scroll:void 0===options.alertScroll||options.alertScroll===!0?!0:!1,timer:void 0===options.alertTimer||options.alertScroll===!0?!0:!1,register:!0,style:"danger",text:errorAlerts[i]};"page"===alertConfig.type&&(alertConfig.register=!1),$alert.add(alertConfig)}}}}]);