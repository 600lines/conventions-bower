angular.module("ngAmbassador.tables",["smartTable.table","ambassador.table.filters","ngAmbassador.services","ngAmbassador.api","ngAmbassador.alerts"]),function(global,angular){"use strict";function ColumnProvider(DefaultColumnConfiguration){function Column(config){return this instanceof Column?void angular.extend(this,config):new Column(config)}this.setDefaultOption=function(option){angular.extend(Column.prototype,option)},DefaultColumnConfiguration.headerTemplateUrl="../ambassador/templates/table/table.default-header.html",this.setDefaultOption(DefaultColumnConfiguration),this.$get=function(){return Column}}var smartTableColumnModule=angular.module("smartTable.column",[]).constant("DefaultColumnConfiguration",{isSortable:!0,isEditable:!1,type:"text",headerTemplateUrl:"",map:"",label:"",group:"",sortPredicate:"",formatFunction:"",formatParameter:"",filterPredicate:"",cellTemplate:"",cellTemplateUrl:"",headerClass:"",cellClass:"",saving:!1,width:"",pinnedWidth:0});ColumnProvider.$inject=["DefaultColumnConfiguration"],smartTableColumnModule.provider("Column",ColumnProvider),global.ColumnProvider=ColumnProvider}(window,angular),function(angular){"use strict";angular.module("smartTable.directives",["ui.bootstrap.position"]).directive("smartTable",["DefaultTableConfiguration","$injector",function(defaultConfig,$injector){return{restrict:"EA",scope:{dataSource:"=rows",columnCollection:"=columns",config:"=",exposedData:"=?"},replace:"true",templateUrl:"../ambassador/templates/table/table.html",controller:"SmartTableCtrl",link:function(scope,element,attr,ctrl){function setConfig(){var newConfig=angular.extend({},defaultConfig,scope.config),length=void 0!==scope.columns?scope.columns.length:0;if(scope.table={load:!1},"undefined"!=typeof scope.config.tableFilterSetType?(scope.table.load=!1,scope.filterSetType=scope.config.tableFilterSetType):(scope.table.load=!0,scope.filterSetType=""),scope.filters=[],ctrl.setGlobalConfig(newConfig),newConfig.dependencies)for(var x=0;x<newConfig.dependencies.length;x++)scope[newConfig.dependencies[x]]=$injector.get(newConfig.dependencies[x]);if("multiple"!==newConfig.selectionMode||newConfig.displaySelectionCheckbox!==!0)for(var i=length-1;i>=0;i--)scope.columns[i].isSelectionColumn===!0&&ctrl.removeColumn(i);else ctrl.insertColumn({cellTemplateUrl:"../ambassador/templates/table/table.select-checkbox.html",headerTemplateUrl:"../ambassador/templates/table/table.select-all-checkbox.html",isSelectionColumn:!0,isSortable:!1,cellClass:"smart-table-checkbox-cell",headerClass:"smart-table-checkbox-header-cell",pinnedWidth:32},0);angular.isDefined(newConfig.manageActions)&&newConfig.editDeleteBtns!==!0&&newConfig.manageBtns!==!0&&ctrl.insertColumn({cellTemplate:"<manage-table-btn></manage-table-btn>",isSortable:!1,cellClass:"smart-table-manage-cell",headerClass:"smart-table-header-manage-cell"},scope.columns.length),newConfig.editDeleteBtns===!0&&ctrl.insertColumn({cellTemplate:"<table-edit-delete></table-edit-delete>",isSortable:!1},scope.columns.length),newConfig.useServer||scope.$watch("dataSource.length",function(newValue,oldValue){oldValue!==newValue&&(scope.dataCollection=scope.dataSource,scope.noResults=0===scope.dataCollection.length?!0:!1,ctrl.setRowsLength(),ctrl.sortBy())})}if(scope.columnCollection)for(var i=0,l=scope.columnCollection.length;l>i;i++)ctrl.insertColumn(scope.columnCollection[i]);scope.config.useServer=angular.isDefined(scope.dataSource)?!1:!0,scope.$watch("filters.length",function(newValue,oldValue){newValue!==oldValue&&(scope.currentPage=1,ctrl.filterTable())}),setConfig(),ctrl.setTableFilters()}}}]).directive("smartTableDataRow",["$compile","$position","$document",function($compile,$position,$document){return{require:"^smartTable",restrict:"C",link:function(scope,element,attr,ctrl){var template,templateCreated=!1;scope.$watch("dataRow.saving",function(saving){saving?(templateCreated=!0,scope.position=$position.offset(element),template=angular.element("<div class=\"table-row-saving\" ng-style=\"{width: position.width + 'px', height: position.height + 'px', left: position.left + 'px', top: position.top + 'px'}\"><div class='row-saving-inner'>Saving</div></div>"),$compile(template)(scope),$document.find("body").append(template)):templateCreated&&template.remove()});var _config;null!==(_config=scope.config)&&"function"==typeof _config.rowFunction&&_config.rowFunction(scope,element,attr,ctrl),element.bind("click",function(){scope.$apply(function(){ctrl.toggleSelection(scope.dataRow)})})}}}]).directive("smartTableHeaderCell",function(){return{restrict:"C",require:"^smartTable",link:function(scope,element,attr,ctrl){element.bind("click",function(event){"INPUT"!==event.target.nodeName&&0!==event.target.cellIndex&&scope.column.isSortable&&scope.$apply(function(){ctrl.sortBy(scope.column)})})}}}).directive("smartTableSelectAll",function(){return{restrict:"C",require:"^smartTable",link:function(scope,element,attr,ctrl){element.bind("click",function(){ctrl.toggleSelectionAll(element[0].checked===!0)})}}}).directive("stopEvent",function(){return{restrict:"A",link:function(scope,element,attr){element.bind(attr.stopEvent,function(e){e.stopPropagation()})}}}).directive("smartTableGlobalSearch",[function(){return{restrict:"C",require:"^smartTable",scope:{columnSpan:"@"},templateUrl:"../ambassador/templates/table/table.global-search-cell.html",replace:!1,link:function(scope,element,attr,ctrl){scope.searchValue="",scope.$watch("searchValue",function(value){""!==value&&ctrl.search(value)})}}}]).directive("smartTableSearch",["$api","$errors",function(){return{restrict:"C",require:"^smartTable",scope:{columnSpan:"@"},templateUrl:"../ambassador/templates/table/table.search-cell.html",replace:!1,link:function(scope,element,attr,ctrl){var searchValueLoaded=!1;""!==scope.$parent.saved.searchString?(scope.searchValue=scope.$parent.saved.searchString.search,searchValueLoaded=!0):scope.searchValue="",scope.$watch("searchValue",function(newValue,oldValue){(newValue!==oldValue||searchValueLoaded)&&(ctrl.search(newValue,null,searchValueLoaded),searchValueLoaded=!1)}),element.bind("keydown keypress",function(event){13===event.which&&(scope.$apply(function(){ctrl.search(scope.searchValue,null,!0)}),event.preventDefault())})}}}]).directive("tableExternalOrdering",[function(){return{restrict:"C",templateUrl:"../ambassador/templates/table/table.external-ordering.html",require:"^smartTable",link:function(scope,element,attrs,ctrl){scope.getData=function(order){scope.selectedOrder=order;var ordering={sortPredicate:order.predicate,reverse:!1};ctrl.sortByNonColumn(ordering)}}}}]).directive("tableApplyAction",function(){return{restrict:"C",templateUrl:"../ambassador/templates/table/table.apply-action.html",require:"^smartTable",link:function(scope,element,attrs,ctrl){function getSelected(){var i,l=scope.displayedCollection.length,rowsSelected=[];for(i=0;l>i;i++)scope.displayedCollection[i].isSelected&&rowsSelected.push(scope.displayedCollection[i]);return rowsSelected}scope.action=function(a){var selected=getSelected();selected.length>0&&(a.loader===!0&&ctrl.showLoader(!0),a.action(selected,function(tableAction){ctrl.toggleSelectionAll(!1),void 0!==tableAction&&("deleteRows"===tableAction?ctrl[tableAction](selected):ctrl[tableAction]())}))}}}}).directive("displayPerPage",function(){return{restrict:"E",templateUrl:"../ambassador/templates/table/table.display-per-page.html",require:"^smartTable",link:function(scope,element,attrs,ctrl){function capitaliseFirstLetter(string){return string.charAt(0).toUpperCase()+string.slice(1)}scope.$watch("apiEndpoint",function(){angular.isDefined(scope.apiEndpoint)&&(scope.label=scope.paginateLabel||capitaliseFirstLetter(scope.apiEndpoint))}),scope.pageResults=[{text:"10 results",value:10},{text:"25 results",value:25},{text:"50 results",value:50},{text:"100 results",value:100}],scope.setDisplayPerPage=function(value){scope.setItemsPerPage(value),ctrl.setCurrentPage(1),scope.useServer?ctrl.updateTable():(scope.displayedCollection=ctrl.pipe(scope.dataCollection),ctrl.setPageDisplay())}}}}).directive("manageTableBtn",["$parse",function($parse){return{restrict:"E",templateUrl:"../ambassador/templates/table/table.manage-action-dropdown.html",require:"^?smartTable",link:function(scope,element,attrs,ctrl){if(scope.showTags=!1,scope.manageActionTags){scope.tags=angular.copy(scope.manageActionTags);for(var i=0;i<scope.tags.length;i++)scope.tags[i].active=$parse(scope.tags[i].show)(scope),scope.tags[i].active===!0&&(scope.showTags=!0)}scope.loading=!1,scope.spinnerConf={radius:3,width:2,length:3,lines:9,color:"#ffffff"},scope.action=function(action){action(scope.dataRow,function(){ctrl.updateTable()},function(status){scope.loading=status})},scope.isZero=function(amount){return 0===parseFloat(amount)}}}}]).directive("tableEditDelete",function(){return{restrict:"E",templateUrl:"../ambassador/templates/table/table.manage-action-buttons.html",require:"^smartTable",link:function(scope,element,attrs,ctrl){scope.action=function(action){action(scope.dataRow,function(tableAction){void 0!==tableAction&&ctrl[tableAction](scope.dataRow)})}}}}).directive("tooltipCell",function(){return{restrict:"E",templateUrl:"../ambassador/templates/table/table.tooltip-cell.html",require:"^smartTable",link:function(){}}}).directive("smartTableDataCell",["$filter","$http","$templateCache","$compile","$parse",function(filter,http,templateCache,compile,parse){return{restrict:"C",template:'<div ng-if="column.cellTemplateUrl" ng-include="column.cellTemplateUrl"></div>',compile:function(){return{pre:function(scope,element){function defaultContent(){scope.formattedValue=format(getter(row),column.formatFunction,column.formatParameter),element.text(scope.formattedValue)}var childScope,column=scope.column,format=filter("format"),row=scope.dataRow,getter=parse(column.map);column.cellTemplateUrl||(column.cellTemplate?(childScope=scope.$new(),element.html(column.cellTemplate),compile(element.contents())(childScope)):defaultContent())}}}}}]).directive("inputType",function(){return{restrict:"A",priority:1,link:function(scope,ielement,iattr){var type=scope.$eval(iattr.type);iattr.$set("type",type)}}}).directive("editableCell",["$parse",function(parse){return{restrict:"EA",require:"^smartTable",templateUrl:"../ambassador/templates/table/table.editable-cell.html",scope:{row:"=",column:"=",type:"="},replace:!0,link:function(scope,element,attrs,ctrl){var form=angular.element(element.children()[1]),input=angular.element(form.children()[0]),getter=parse(scope.column.map);scope.isEditMode=!1,scope.$watch("row",function(){scope.value=getter(scope.row)},!0),scope.submit=function(){scope.myForm.$valid===!0&&(ctrl.updateDataRow(scope.row,scope.column.map,scope.value),ctrl.sortBy()),scope.toggleEditMode()},scope.toggleEditMode=function(){scope.value=getter(scope.row),scope.isEditMode=scope.isEditMode!==!0},scope.$watch("isEditMode",function(newValue){newValue===!0&&(input[0].select(),input[0].focus())}),input.bind("blur",function(){scope.$apply(function(){scope.submit()})})}}}]),angular.module("smartTable.filters",[]).constant("DefaultFilters",["currency","date","json","lowercase","number","uppercase"]).filter("format",["$filter","DefaultFilters",function(filter,defaultfilters){return function(value,formatFunction,filterParameter){var returnFunction;return(returnFunction=formatFunction&&angular.isFunction(formatFunction)?formatFunction:-1!==defaultfilters.indexOf(formatFunction)?filter(formatFunction):function(value){return value})(value,filterParameter)}}]),angular.module("smartTable.table",["smartTable.column","smartTable.utilities","smartTable.directives","smartTable.filters","ui.bootstrap.pagination.smartTable"]).constant("DefaultTableConfiguration",{selectionMode:"none",isGlobalSearchActivated:!1,isSearchActive:!0,displaySelectionCheckbox:!1,isPaginationEnabled:!0,isTopPaginationEnabled:!1,itemsByPage:10,maxSize:5,dependencies:[],apiEndpoint:"",tableClass:"",defaultParams:{},sortAlgorithm:"",filterAlgorithm:"",colGroupings:[],tablePinnedCols:0,tablePinnedHeight:0,trackById:null}).controller("SmartTableCtrl",["$scope","$rootScope","Column","$filter","$parse","ArrayUtility","DefaultTableConfiguration","$api","$timeout","$promiseKeeper","$errors",function(scope,rootScope,Column,filter,parse,arrayUtility,defaultConfig,$api,$timeout,$promiseKeeper,$errors){function setColGroups(){for(var colGroups=[],colIncrement=0,i=0;i<scope.colGroupings.length;i++){if(scope.colGroupings[i].start>colIncrement)for(var x=colIncrement;x<scope.colGroupings[i].start;x++)colGroups.push({label:"",length:1}),colIncrement++;colIncrement+=scope.colGroupings[i].length,colGroups.push(scope.colGroupings[i])}if(colIncrement!==scope.columns.length)for(var x=colIncrement;x<scope.columns.length;x++)colGroups.push({label:"",length:1});return colGroups}function isAllSelected(){var i,l=scope.displayedCollection.length;for(i=0;l>i;i++)if(scope.displayedCollection[i].isSelected!==!0)return!1;return!0}function sortDataRow(array,column){var sortAlgo=(scope.sortAlgorithm&&angular.isFunction(scope.sortAlgorithm))===!0?scope.sortAlgorithm:filter("orderBy");return column?arrayUtility.sort(array,sortAlgo,column.sortPredicate,column.reverse):array}function selectDataRow(array,selectionMode,index,select){var dataRow,oldValue;if(angular.isArray(array)&&("multiple"===selectionMode||"single"===selectionMode)&&index>=0&&index<array.length){if(dataRow=array[index],"single"===selectionMode)for(var i=0,l=array.length;l>i;i++)oldValue=array[i].isSelected,array[i].isSelected=!1,oldValue===!0&&scope.$emit("selectionChange",{item:array[i]});dataRow.isSelected=select,scope.holder.isAllSelected=isAllSelected(),scope.$emit("selectionChange",{item:dataRow})}}function setOrdering(column){return column.reverse?"-"+column.sortPredicate:column.sortPredicate}function parseFilters(filtersArray){var filters={};return angular.isDefined(filtersArray)&&0!==filtersArray.length?(filtersArray.forEach(function(filter){filters[filter.param]=filter.param_val}),filters):filters}function filterTableServer(data){scope.fullDatasetLoad?(scope.exposedData=angular.copy(data),scope.displayedCollection=data.splice(scope.currentPage*scope.itemsByPage-scope.itemsByPage,scope.itemsByPage),scope.fullDatasetLoad=!1):scope.displayedCollection=data,scope.totalRows=data.count,self.calculateNumberOfPages(scope.totalRows),self.setPageDisplay()}function useServer(){self.getData().then(function(data){filterTableServer(data)})}function checkFilterFuncs(){for(var i=0,l=scope.filters.length;l>i;i++)if(void 0===scope.filters[i].filterFunc)return!0;return!1}scope.columns=[],scope.dataCollection=scope.dataSource||[],scope.displayedCollection=[],scope.numberOfPages=0,scope.currentPage=1,scope.holder={isAllSelected:!1},scope.useServer=!1,scope.tableLoader=!1,scope.noResults=!1,scope.saved={filtersId:void 0,searchString:""},scope.fullDatasetLoad=angular.isArray(scope.exposedData)&&0===scope.exposedData.length?!0:!1;var lastColumnSort,search,predicate={},self=this;scope.getPinnedStyle=function(colIndex,type){var width=0,left=1,style={};if("data"===type){for(var i=0;colIndex+1>i;i++)width=scope.columns[i].pinnedWidth,left+=scope.columns[i].pinnedWidth;colIndex<scope.tablePinnedCols&&(style={width:width+"px",left:left-width+"px"}),scope.tablePinnedHeight&&(style.height=scope.tablePinnedHeight+"px")}else if("header"===type){style={};for(var x=0;colIndex+1>x;x++)width=scope.columns[x].pinnedWidth,left+=scope.columns[x].pinnedWidth;scope.columns[colIndex].width&&(style.width=scope.columns[colIndex].width),colIndex<scope.tablePinnedCols&&(style={width:width+"px","min-width":width+"px",left:left-width+"px"})}else if("table"===type){for(var margin=0,y=0;y<scope.tablePinnedCols;y++)margin+=scope.columns[y].pinnedWidth;style["margin-left"]=margin-1+"px"}return"undefined"!=typeof scope.columns[colIndex]&&"undefined"!=typeof scope.columns[colIndex].align&&(style["text-align"]=scope.columns[colIndex].align),style},scope.getPinnedPadding=function(){for(var style,padding=0,z=0;z<scope.tablePinnedCols;z++)padding+=scope.columns[z].pinnedWidth;return style={"padding-left":padding+"px"}},scope.isColInGroup=function(colIndex){for(var colIncrement=0,i=0;i<scope.colGroups.length;i++)if(colIncrement+=scope.colGroups[i].length,colIncrement-1>=colIndex)return""!==scope.colGroups[i].label?!0:!1},scope.updateFilters=function(newFilters){if("undefined"!=typeof newFilters&&(scope.filters=newFilters),"undefined"!=typeof scope.filterSetType&&""!==scope.filterSetType)if("undefined"!=typeof scope.saved.filtersId){for(var searchSaved=void 0,found=!1,i=0;i<scope.saved.filters.length;i++)if("undefined"!=typeof scope.saved.filters[i].search){scope.searchChanged?(scope.saved.filters[i].search=scope.config.search,found=!0):searchSaved=scope.saved.filters[i];break}scope.searchChanged||(scope.saved.filters=scope.filters.slice(),"undefined"!=typeof searchSaved&&scope.saved.filters.push(searchSaved)),scope.searchChanged&&!found&&scope.saved.filters.push({search:scope.config.search}),$api.use("default").one("filters",scope.saved.filtersId).patch({filters:scope.saved.filters}).then(function(){},function(error){$errors.output({alertSystem:"table-filter-alerts",alertSystemType:"page",defaultMessage:"There was an error saving your filter set. Please try removing the last filter and adding it again if you want it to be saved."},error.data)})}else{var filterSet={name:scope.filterSetType+" filters",type:scope.filterSetType,filters:scope.searchChanged?[{search:scope.config.search}]:scope.filters};$api.use("default").all("filters").post(filterSet).then(function(data){scope.saved.filtersId=data.id},function(error){$errors.output({alertSystem:"table-filter-alerts",alertSystemType:"page",defaultMessage:"There was an error saving your filter set. Please try removing the last filter and adding it again if you want it to be saved."},error.data)})}scope.searchChanged=!1},scope.setItemsPerPage=function(value){scope.itemsByPage=value},scope.$on("EXPORT_COLLECTION",function(){scope.tableData.displayedCollection=scope.displayedCollection}),scope.$on("UPDATE_TABLE",function(){angular.isArray(scope.exposedData)&&(scope.fullDatasetLoad=!0),self.updateTable()}),this.setRowsLength=function(){scope.totalRows=scope.dataCollection.length},this.calculateNumberOfPages=function(total){scope.numberOfPages=0===total||scope.itemsByPage<1?1:Math.ceil(total/scope.itemsByPage)},this.setPageDisplay=function(){var rowsShowing=scope.itemsByPage;scope.pageStartNumber=(scope.currentPage-1)*rowsShowing+1,scope.pageEndNumber=(scope.currentPage-1)*rowsShowing+scope.displayedCollection.length},this.setGlobalConfig=function(config){angular.extend(scope,defaultConfig,config)},this.changePage=function(page){var oldPage=scope.currentPage;angular.isNumber(page.page)&&(scope.currentPage=page.page,scope.useServer?this.getData().then(function(data){filterTableServer(data)}):(scope.displayedCollection=this.pipe(scope.dataCollection),scope.holder.isAllSelected=isAllSelected(),this.setPageDisplay(),scope.$emit("changePage",{oldValue:oldPage,newValue:scope.currentPage})))},this.sortBy=function(column){var index=scope.columns.indexOf(column);-1!==index&&column.isSortable===!0&&(lastColumnSort&&lastColumnSort!==column&&(lastColumnSort.reverse="none"),column.sortPredicate=column.sortPredicate||column.map,column.reverse=column.reverse!==!0,lastColumnSort=column),scope.useServer?this.getData(column).then(function(data){filterTableServer(data)}):(scope.displayedCollection=this.pipe(scope.dataCollection),this.setPageDisplay())},this.sortByNonColumn=function(params){lastColumnSort=params,scope.useServer?(this.setCurrentPage(1),this.getData(params).then(function(data){filterTableServer(data)})):(scope.displayedCollection=this.pipe(scope.dataCollection),this.setPageDisplay())},this.search=function(input,column,instant){scope.config.search=input,scope.searchChanged=!0,instant===!0?($timeout.cancel(search),scope.currentPage=1,self.getData().then(function(data){filterTableServer(data),scope.updateFilters()})):(column&&-1!==scope.columns.indexOf(column)?predicate[column.map]=input:predicate={$:input},scope.useServer?(void 0!==search&&$timeout.cancel(search),search=$timeout(function(){scope.currentPage=1,self.getData().then(function(data){filterTableServer(data),scope.updateFilters()})},1500)):(scope.currentPage=1,scope.displayedCollection=this.pipe(scope.dataCollection),scope.updateFilters()))},this.pipe=function(array){var output,filterAlgo=(scope.filterAlgorithm&&angular.isFunction(scope.filterAlgorithm))===!0?scope.filterAlgorithm:filter("filter");return output=sortDataRow(arrayUtility.filter(array,filterAlgo,predicate),lastColumnSort),this.calculateNumberOfPages(scope.totalRows),scope.isPaginationEnabled?arrayUtility.fromTo(output,(scope.currentPage-1)*scope.itemsByPage,scope.itemsByPage):output},this.updateTable=function(){this.getData().then(function(data){filterTableServer(data),rootScope.$broadcast("TABLE_UPDATED")})},this.filterTable=function(){var filtered;scope.useServer||checkFilterFuncs()?useServer():(filtered=scope.dataCollection,angular.forEach(scope.filters,function(filter){filtered=filtered.filter(function(item){return filter.filterFunc(item,filter)})}),scope.totalRows=filtered.length,scope.displayedCollection=this.pipe(filtered),this.setPageDisplay())};var tableLoaderPromise;this.showLoader=function(){$promiseKeeper.getActive()?tableLoaderPromise=$promiseKeeper.add():scope.tableLoader=!0},this.setCurrentPage=function(page){scope.currentPage=page},this.hideLoader=function(){scope.tableLoader=!1,void 0!==tableLoaderPromise&&tableLoaderPromise.deferred.resolve()},this.getData=function(column){var data,searchConfig={},filters=parseFilters(scope.filters),search=void 0===scope.config.search||""===scope.config.search?{}:{search:scope.config.search},orderParam=scope.config.displayTopAmbassadorsOrdering?"stat":"ordering";return scope.noResults=!1,(scope.currentPage-1)*scope.itemsByPage>=scope.totalRows-scope.deletingRows&&(scope.currentPage>1&&scope.currentPage--,scope.deletingRows=0),angular.extend(searchConfig,scope.defaultParams,search,filters,{page:scope.currentPage,page_size:scope.fullDatasetLoad?0:scope.itemsByPage}),void 0!==lastColumnSort?searchConfig[orderParam]=setOrdering(lastColumnSort):void 0!==column?searchConfig[orderParam]=setOrdering(column):void 0!==scope.startingOrder&&(searchConfig[orderParam]=scope.startingOrder),self.showLoader(),data=$api.use("default").all(scope.apiEndpoint).getList(searchConfig),data.then(function(results){0===results.length&&(scope.noResults=!0),self.hideLoader()},function(){scope.noResults=!0,self.hideLoader()}),data},this.setTableFilters=function(){"undefined"!=typeof scope.config.tableFilterSetType?(scope.colGroups=setColGroups(),$api.use("default").all("filters").getList({type:scope.config.tableFilterSetType}).then(function(data){if(data[0]&&"undefined"!=typeof data[0].id){scope.saved.filtersId=data[0].id,scope.saved.filters=data[0].filters;for(var removeIndex=null,i=0;i<scope.saved.filters.length;i++)if("undefined"!=typeof scope.saved.filters[i].search){removeIndex=i,scope.config.search=scope.saved.filters[i].search;break}var temp=null!==removeIndex?(temp=scope.saved.filters.slice(),temp.splice(removeIndex,1),temp):scope.saved.filters.slice();scope.filters=temp,scope.saved.searchString=null!==removeIndex?scope.saved.filters[removeIndex]:{search:""}}else scope.saved.filters=[],self.initialize();scope.table.load=!0},function(error){$errors.output({alertSystem:"table-filter-alerts",alertSystemType:"page",defaultMessage:"There was an error fetching your previously saved filter set. Please reload the page to try again."},error.data),scope.table.load=!0})):self.initialize()},this.initialize=function(){scope.colGroups=setColGroups(),self.getData().then(function(data){filterTableServer(data)})},this.insertColumn=function(columnConfig,index){var column=new Column(columnConfig);arrayUtility.insertAt(scope.columns,index,column)},this.removeColumn=function(columnIndex){arrayUtility.removeAt(scope.columns,columnIndex)},this.moveColumn=function(oldIndex,newIndex){arrayUtility.moveAt(scope.columns,oldIndex,newIndex)},this.clearColumns=function(){scope.columns.length=0},this.toggleSelection=function(dataRow){var index=scope.dataCollection.indexOf(dataRow);-1!==index&&selectDataRow(scope.dataCollection,scope.selectionMode,index,dataRow.isSelected!==!0)},this.toggleSelectionAll=function(value){var i=0,l=scope.displayedCollection.length;if("multiple"===scope.selectionMode){for(;l>i;i++)selectDataRow(scope.displayedCollection,scope.selectionMode,i,value===!0);value===!1&&(scope.holder.isAllSelected=!1)}},this.removeDataRow=function(rowIndex){var toRemove=arrayUtility.removeAt(scope.displayedCollection,rowIndex);arrayUtility.removeAt(scope.dataCollection,scope.dataCollection.indexOf(toRemove))},this.moveDataRow=function(oldIndex,newIndex){arrayUtility.moveAt(scope.displayedCollection,oldIndex,newIndex)},this.updateDataRow=function(dataRow,propertyName,newValue){var oldValue,index=scope.displayedCollection.indexOf(dataRow),getter=parse(propertyName),setter=getter.assign;-1!==index&&(oldValue=getter(scope.displayedCollection[index]),oldValue!==newValue&&(setter(scope.displayedCollection[index],newValue),scope.$emit("updateDataRow",{item:scope.displayedCollection[index]})))},this.deleteRow=function(dataRow){dataRow.remove().then(function(){var index=scope.displayedCollection.indexOf(dataRow);self.removeDataRow(index),scope.deletingRows=1,self.updateTable()})},this.deleteRows=function(dataRows){var count=dataRows.length;angular.forEach(dataRows,function(dataRow){dataRow.remove().then(function(){var index=scope.displayedCollection.indexOf(dataRow);self.removeDataRow(index),--count,0===count&&(scope.deletingRows=dataRows.length,self.updateTable())})})}}])}(angular),function(angular){"use strict";angular.module("smartTable.utilities",[]).factory("ArrayUtility",function(){var removeAt=function(arrayRef,index){return index>=0&&index<arrayRef.length?arrayRef.splice(index,1)[0]:void 0},insertAt=function(arrayRef,index,item){index>=0&&index<arrayRef.length?arrayRef.splice(index,0,item):arrayRef.push(item)},moveAt=function(arrayRef,oldIndex,newIndex){var elementToMove;oldIndex>=0&&oldIndex<arrayRef.length&&newIndex>=0&&newIndex<arrayRef.length&&(elementToMove=arrayRef.splice(oldIndex,1)[0],arrayRef.splice(newIndex,0,elementToMove))},sort=function(arrayRef,sortAlgorithm,predicate,reverse){return sortAlgorithm&&angular.isFunction(sortAlgorithm)?sortAlgorithm(arrayRef,predicate,reverse===!0):arrayRef},filter=function(arrayRef,filterAlgorithm,predicate){return filterAlgorithm&&angular.isFunction(filterAlgorithm)?filterAlgorithm(arrayRef,predicate):arrayRef},fromTo=function(arrayRef,min,length){var limit,start,out=[];if(!angular.isArray(arrayRef))return arrayRef;start=Math.max(min,0),start=Math.min(start,arrayRef.length-1>0?arrayRef.length-1:0),length=Math.max(0,length),limit=Math.min(start+length,arrayRef.length);for(var i=start;limit>i;i++)out.push(arrayRef[i]);return out};return{removeAt:removeAt,insertAt:insertAt,moveAt:moveAt,sort:sort,filter:filter,fromTo:fromTo}}),angular.module("ui.bootstrap.pagination.smartTable",[]).constant("paginationConfig",{boundaryLinks:!1,directionLinks:!0,firstText:"First",previousText:"<",nextText:">",lastText:"Last"}).directive("paginationSmartTable",["paginationConfig",function(paginationConfig){return{restrict:"EA",require:"^smartTable",scope:{numPages:"=",currentPage:"=",maxSize:"="},templateUrl:"../ambassador/templates/table/table.pagination.html",replace:!0,link:function(scope,element,attrs,ctrl){function makePage(number,text,isActive,isDisabled){return{number:number,text:text,active:isActive,disabled:isDisabled}}var boundaryLinks=angular.isDefined(attrs.boundaryLinks)?scope.$eval(attrs.boundaryLinks):paginationConfig.boundaryLinks,directionLinks=angular.isDefined(attrs.directionLinks)?scope.$eval(attrs.directionLinks):paginationConfig.directionLinks,firstText=angular.isDefined(attrs.firstText)?attrs.firstText:paginationConfig.firstText,previousText=angular.isDefined(attrs.previousText)?attrs.previousText:paginationConfig.previousText,nextText=angular.isDefined(attrs.nextText)?attrs.nextText:paginationConfig.nextText,lastText=angular.isDefined(attrs.lastText)?attrs.lastText:paginationConfig.lastText;scope.$watch("numPages + currentPage + maxSize",function(){scope.pages=[];var startPage=1,endPage=scope.numPages;scope.maxSize&&scope.maxSize<scope.numPages&&(startPage=Math.max(scope.currentPage-Math.floor(scope.maxSize/2),1),endPage=startPage+scope.maxSize-1,endPage>scope.numPages&&(endPage=scope.numPages,startPage=endPage-scope.maxSize+1));for(var number=startPage;endPage>=number;number++){var page=makePage(number,number,scope.isActive(number),!1);scope.pages.push(page)}if(directionLinks){var previousPage=makePage(scope.currentPage-1,previousText,!1,scope.noPrevious());scope.pages.unshift(previousPage);var nextPage=makePage(scope.currentPage+1,nextText,!1,scope.noNext());scope.pages.push(nextPage)}if(boundaryLinks){var firstPage=makePage(1,firstText,!1,scope.noPrevious());scope.pages.unshift(firstPage);var lastPage=makePage(scope.numPages,lastText,!1,scope.noNext());scope.pages.push(lastPage)}scope.currentPage>scope.numPages&&scope.selectPage(scope.numPages)}),scope.noPrevious=function(){return 1===scope.currentPage},scope.noNext=function(){return scope.currentPage===scope.numPages},scope.isActive=function(page){return scope.currentPage===page},scope.selectPage=function(page){!scope.isActive(page)&&page>0&&page<=scope.numPages&&(scope.currentPage=page,ctrl.changePage({page:page}))}}}}]),angular.module("ambassador.table.filters",[]).directive("tableFilterSelect",["$api","$errors","$filter","$timeout","dateParser",function($api,$errors,$filter,$timeout,dateParser){return{restrict:"E",scope:{filters:"=",config:"=",currency:"=",filterSetType:"@",filtersId:"=?",savedFilters:"=?",updateFilters:"&"},controller:"tableFilterCtrl",templateUrl:"../ambassador/templates/table/table.filter-select.html",link:function(scope,elm,attrs,ctrl){function Filter(config){this.label=config.label,this.param=config.param,this.param_val=null,this.val_label_prefix=config.displayParamPrefix,this.val_label=config.displayParam,angular.isDefined(config.filterFunc)&&(this.filterFunc=config.filterFunc)}function checkCurrentFilters(newFilter){return angular.forEach(scope.filters,function(filter){return filter.template===newFilter.template?!0:void 0}),!1}var currencies={USD:"$",GBP:"£",SGD:"S$",EUR:"€",AUD:"A$",ZAR:"R",BRL:"R$",CAD:"C$",NZD:"NZ$"};scope.currencySymbol=currencies[scope.currency],scope.datepickerConfig={isOpen:!0},scope.selectFilter=function(filter){"typeahead"===filter.template&&(scope.useDropdown=filter.useDropdown,scope.typeaheadData=filter.useDropdown?filter.data:[]),"calendar"===filter.template&&(scope.datepickerConfig.isOpen=!0),scope.selectedFilter=filter},scope.selectOption=function(value){scope.filterValue=value,scope.addFilter(scope.selectedFilter,scope.filterValue)},scope.checkDate=function(filter,value){var format="undefined"!=typeof scope.activeFilter.config.format?scope.activeFilter.config.format:"MM-dd-yyyy";$timeout(function(){"undefined"!=typeof dateParser.parse(elm.find("input")[0].value,format)&&scope.addFilter(filter,value)},0)},scope.addFilter=function(filter,value){var newFilter;""!==scope.filterValue&&(value=scope.filterValue),""===value||checkCurrentFilters(filter)||(newFilter=new Filter(filter),"calendar"===filter.template?(newFilter.param_val=$filter("date")(value,"yyyy-MM-dd"),newFilter.val_label=$filter("date")(value,scope.activeFilter.config.format?scope.activeFilter.config.format:"MM-dd-yyyy")):"money"===filter.template?(newFilter.param_val=value,newFilter.val_label=scope.currencySymbol+""+$filter("number")(value,2)):"text"===filter.template?(newFilter.param_val=value,newFilter.val_label=value):"undefined"!=typeof filter.options?(newFilter.param_val=value.value,newFilter.val_label=value.label):(newFilter.param_val="undefined"!=typeof filter.async.param?value[filter.async.param]:value[newFilter.param],newFilter.val_label=newFilter.val_label_prefix?value[newFilter.val_label_prefix]+" - "+value[newFilter.val_label]:value[newFilter.val_label]),scope.filters.push(newFilter),scope.updateFilters(),scope.selectedFilter="")
},scope.clearAll=function(){scope.filters.length=0,scope.updateFilters()},scope.resetFilter=function(){scope.selectedFilter=""},scope.filterSelected=function(item){if(0===scope.filters.length)return item;for(var found=!0,i=0;i<scope.filters.length;i++){if(item.label===scope.filters[i].label){found=!0;break}found=!1}return found?void 0:item},void 0!==scope.config&&(ctrl.setConfig(scope.config),scope.filters.length>0&&angular.forEach(scope.filters,function(filter){scope.filterSelected(filter)}))}}}]).directive("tableFilterActive",[function(){return{restrict:"E",scope:{filters:"=",updateFilters:"&"},controller:"tableFilterCtrl",templateUrl:"../ambassador/templates/table/table.filter-active.html",link:function(scope){scope.removeFilter=function(filter){scope.filters=_.without(scope.filters,filter),scope.updateFilters({newFilters:scope.filters})}}}}]).directive("tableFilterInput",["$compile","$timeout",function($compile,$timeout){return{restrict:"E",require:"^tableFilterSelect",link:function(scope,elm){function compileInput(filterTemp){elm.html(filterTemp?templates[filterTemp]:""),$compile(elm.contents())(scope)}var templates={text:'<div class="input-group"><input ng-model="filterValue" ga-enter="addFilter(selectedFilter, filterValue)" class="form-control" type="text"><span class="input-group-btn"><button ng-click="addFilter(selectedFilter, filterValue)" class="btn btn-default" type="button"><i class="fa fa-plus"></i></button></span></div>',select:'<div class="dropdown"><a class="dropdown-toggle btn btn-default"> Select an option <i class="fa fa-caret-down"></i></a><ul class="dropdown-menu"><li ng-repeat="o in activeFilter.options"><a ng-click="selectOption(o)">{{o.label}}</a></li></ul></div>',money:'<div class="input-group input-money"><span class="input-group-addon">{{currencySymbol}}</span><input ng-model="filterValue" ga-enter="addFilter(selectedFilter, filterValue)" type="text" class="form-control"><span class="input-group-btn"><button ng-click="addFilter(selectedFilter, filterValue)" class="btn btn-default" type="button"><i class="fa fa-plus"></i></button></span></div>',typeahead:'<div><div ng-if="!useDropdown" class="async-loader"><input type="text" ng-model="filterValue" placeholder="Search {{activeFilter.async.endpoint}}" typeahead="o as o[activeFilter.async.field] for o in asyncSearch($viewValue) | filter:{ activeFilter.async.field: $viewValue} | limitTo:15" typeahead-loading="async.loadingResults" typeahead-wait-ms="async.asyncWaitTime" typeahead-template-url="../ambassador/templates/table/table.typeahead-filter-template.html" typeahead-on-select="addFilter(selectedFilter, filterValue)" class="form-control"><i ng-show="async.loadingResults" class="fa fa-refresh fa-spin"></i></div><div ng-if="useDropdown" class="dropdown dropdown-select" is-open="tyepaheadDropdown.isOpen"><a class="dropdown-toggle btn btn-default">Select {{activeFilter.async.endpoint}} <i class="fa fa-caret-down"></i></a><ul class="dropdown-menu"><li ng-repeat="o in typeaheadData" ng-if="typeaheadData.length > 0"><a ng-click="addFilter(selectedFilter, o)"><span ng-if="activeFilter.async.displayPrefix !== undefined">{{o[activeFilter.async.displayPrefix]}} - </span>{{o[activeFilter.async.field]}}</a></li><li ng-if="typeaheadData.length === 0"><a ng-if="activeFilter.noItems !== undefined && !activeFilter.noItems.callback" ng-click="resetFilter()"><span ng-if="activeFilter.noItems.text !== undefined">{{activeFilter.noItems.text}}</span><span ng-if="!activeFilter.noItems.text">No {{activeFilter.async.endpoint}} to select</span></a><a ng-if="activeFilter.noItems !== undefined && activeFilter.noItems.callback !== undefined" ng-click="callbackFunction()"><span ng-if="activeFilter.noItems.text !== undefined">{{activeFilter.noItems.text}}</span><span ng-if="!activeFilter.noItems.text">No {{activeFilter.async.endpoint}} to select</span></a></li></ul></div></div>',calendar:'<div class="datepicker-field"><input type="text" class="form-control" ng-change="checkDate(selectedFilter, filterValue)" placeholder="{{activeFilter.config.format.toLowerCase() || \'mm-dd-yyyy\'}}" datepicker-popup="{{activeFilter.config.format || \'MM-dd-yyyy\'}}" datepicker-options="{showWeeks: false}" is-open="datepickerConfig.isOpen" ng-click="datepickerConfig.isOpen = true;" show-button-bar="false" ng-model="filterValue" min-date="activeFilter.config.minDate" max-date="activeFilter.config.maxDate" /></div>'};scope.$watch("selectedFilter",function(filter){""===filter?(compileInput(),scope.filterValue=""):(scope.activeFilter=filter,compileInput(filter.template),("text"===filter.template||"money"===filter.template)&&$timeout(function(){elm.find("input")[0].focus()}),"select"===filter.template&&$timeout(function(){elm.find("a")[0].click()}),"typeahead"===filter.template&&$timeout(filter.useDropdown?function(){elm.find("a")[0].click()}:function(){elm.find("input")[0].focus()}))}),scope.callbackFunction=function(){scope.activeFilter.noItems.callback(),scope.resetFilter()}}}}]).controller("tableFilterCtrl",["$scope","$api","$q",function($scope,$api,$q){var abortSearch;$scope.selectedFilter="",$scope.filterValue="",$scope.async={loadingResults:!1,asyncWaitTime:500},$scope.activeFilter={},$scope.filterOptions=[],this.setConfig=function(config){angular.forEach(config,function(filter){"typeahead"===filter.template&&$scope.getData(filter),$scope.filterOptions.push(filter)})},$scope.getData=function(filter){$api.use("default").all(filter.async.endpoint).getList({page_size:25}).then(function(data){data.count<=25?(filter.data=data,filter.useDropdown=!0):filter.useDropdown=!1})},$scope.asyncSearch=function(value){return abortSearch&&abortSearch.resolve(),abortSearch=$q.defer(),$scope.async.loadingResults=!0,$api.use("default").all($scope.activeFilter.async.endpoint).withHttpConfig({timeout:abortSearch.promise}).getList({search:value,ordering:$scope.activeFilter.async.field}).then(function(data){return $scope.async.loadingResults=!1,data})}}])}(angular);